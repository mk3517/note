01.1 发展历史和发行版本
	Unix与Linux发展史
		1965 Multics MIT GE AT&T
		1969 肯。汤普森 Unix Unics
			美苏冷战 开发tcp/ip协议 捆绑Unix
		1971 同事丹尼斯。里奇 发明C语言
			重新改写Unix
	AIX操作系统是国内最普遍使用的Unix平台
	Solaris是可以在个人PC上安装
	BSD是另外的Unix分支
		伯克利大学软件包
		FreeBSD
	Linux诞生于1991年
		由芬兰大学Linus Torvalds开发，名为Linus' Unix，前身minix
		芬兰设立 国际技术成就奖 100万欧元
		企鹅为linux吉祥物，也是芬兰的吉祥物
			也说明类似南极不属于任何国家
		发行版本 vs 内核版本
			内核网站 www.kernel.org
				2.6.18 主版本.次版本.末版本
					次版本为偶数是稳定版 奇数是开发板
					主版本到3以后都是稳定版
			下载内核版本后再开发产生发行版
			内核一开始只有90k 现在有几十兆
			发行版有2个系列，区别在于软件安装
				redhat centos suse fedoro turbolinux ...
				debian ubuntu knoppix
				我们选择centos 社区维护
				ubuntu桌面更漂亮 suse桌面也不错
				redhat系列：红旗Linux
				knoppix不用安装
01.2 开源软件简介
	对比商业软件
	开源软件： nginx mysql php mongodb python ruby Apache（羽毛）
		阿帕奇 市场占有率60%	nginx比阿帕奇更火	大写PHP就像大象
	开源软件 != 免费
		购买注释
		约等于 自由软件 freeware
		足够多的眼睛就能让问题浮现
		安全等级 A B C D
			windows服务器版 C
			linux 打入安全补丁后能达到 B
	软件通过维护来收费
		开源软件开发的软件也应该是开源软件
	支撑互联网的开源技术 LAMP
		Linux Apache MySQL PHP
01.3 Linux应用领域
	基于Linux的企业服务器
		扫描踩点 www.netcraft.com
		通过分析数据包内容来判断你的服务器类型
		download.microsoft.com也是使用Linux服务器
	嵌入式应用
		android平台，安装quickSSHd服务端软件就能用SecureCRT连接
	电影娱乐业
		SGI服务器换成Linux
		泰坦尼克号 怪物史莱克 阿凡达 指环王 都是在Linux下渲染
01.4 Linux学习方法
	Windows易用优先 Linux服务器优先
	Linux必须使用命令行
	帮助 文档 示例 查找
	忘掉Windows思维方式

02.1 Linux系统安装 vmware虚拟机安装与使用
	最大磁盘空间不占用磁盘空间，按实际大小分配
	虚拟机内存不能超过真实机内存上限，界面最小内存628m
	CD/DVD选项中已连接中打钩才能识别物理光驱
	网络适配器：暂时不设置
	*实际就设置了光盘路径
	小技巧
		创建虚拟机快照 点击转到
		虚拟机--管理--克隆
			克隆机占用资源小于原始机，但原始机删除后克隆机无法使用
			完整克隆可以独立运行？
02.2 系统分区
	磁盘分区：
		分区类型：主分区 扩展分区：最多只能有一个 主分区+扩展分区 最多为4个
			扩展分区可以包含逻辑分区
			扩展分区不能写入数据，逻辑分区和主分区可以正常写入数据
	格式化（高级格式化）
		Linux文件系统：EXT2 EXT3 EXT4(CentOS默认文件系统)
		格式化就是写入文件系统
		Ext4 默认分割大小4kb 10kb文件分为4+4+2
			磁盘数据整理将文件零散的数据块(block)放在一起
			i节点号 iNode号 表示文件 来对应使用的block块
	硬件设备名称
		IDE硬盘 /dev/hd[a-d]
		SCSI/SATA/USB /dev/sd[a-p]
		光驱 /dev/cdrom或/dev/sr0
		打印机 /dev/lp[0-1] 或 dev/usb/lp[0-15]
		鼠标 /dev/mouse
	分区设备文件名
		/dev/sda1 第一个sata硬盘第一个分区
		虚拟机模拟硬盘也都是sda
		逻辑分区是从sda5开始，即使不存在sda4
	挂载（分配盘符）
		必须分区
			/ 根分区
			swap分区 交换分区，内存2倍，不超过2GB
				类似虚拟内存
		推荐分区
			/boot 启动分区，200MB
				避免根分区写满后无法启动
		文件系统结构
			/	(/dev/sda3)
				/boot 	(/dev/sda1)
				/home	(/dev/sda2)
	总结
		分区->格式化->定义设备文件名->挂载
02.3 Linux系统安装
	按F2进入BIOS界面，设置启动顺序，光盘启动，安装好以后选到硬盘启动
		虚拟机可以自动识别，不需要设置
	Ctrl Alt Enter 全屏显示
	Windows下局域网内不能使用相同主机名，否则无法相互访问
	设置密码：
		密码原则：复杂性 易记忆性 时效性
			8字节以上 flzx_3QC 飞流直下三千尺
		虚拟机用123456也可以
	分区
		/boot分区会自动升为sda1 200M
		根分区最后分
		交互分区swap在文件系统类型选 1G
		/home 文件服务器默认上传位置 可以单独分区 2G
		根分区使用全部空间
	设置网卡选择开启
		eno16777736 192.168.86.
	安装软件内容
		Desktop 个人用户推荐
		Minimal Desktop
		Minimal 服务器推荐
		...
		
		注：最小安装很多命令都没有，选Basic Server包含基本命令
		英文安装的请选择中文支持
		
		/sda1 /boot /sda2 /home /sda3 swap /sda5 /
		root密码 123456
		家目录 ~
			/home/wsm /root
		安装日志
			/root/install.log 安装在系统中的软件包及其版本信息
			/root/install.log.syslog 安装过程中的事件日志
			/root/anaconda-ks.cfg 配置文件的个数记录和安装的设置信息，便于无人值守安装
02.4 远程登录管理工具
	虚拟机网络配置
		桥接：虚拟机利用真实网卡与计算机进行通信
			需要一个IP地址
		NAT: 通过VMnet8		可以访问互联网
		Host only：通过VMnet1		只能跟本机通信
	简易配置网络地址
		ifconfig
			lo 本机回环网卡 127.0.0.1
			ifconfig eth0 192.168.xxx.xxx
				仅临时更改，重启后失效
		编辑-虚拟网络编辑器 桥接到xxx
	SecureCRT
		有些系统不允许root运程登陆
		df命令会有乱码
		界面配置并避免乱码
			Options-Session Option
				Terminal-Emulation
					Linux Ansi Color有颜色
				Appearance
					scheme-traditional
					font-新宋体 字符集GB2312
					Characher Set UTF-8
	Winscp文件拷贝工具
	vnc可以用图形界面远程管理linux（不推荐）
03 给初学者建议
03.1 注意事项
	Linux严格区分大小写
	所有内容都是以文件格式保存
	Linux没有扩展名规定	
		windows 文件名8.3规则
		习惯性扩展名，并非强制
			压缩包 .gz .bz2 .tar.bz2 .tgz
			二进制软件包 .rpm
			脚本 .sh
			配置文件 .conf
	所有存储设备都必须挂载后才能使用
		图形界面中有自动挂载功能
03.2 服务器管理和维护建议
	各目录作用
	/bin	存放系统命令的目录，普通用户和超级用户都可以执行
	/sbin	保存和系统环境设置相关的命令，只有超级用户可以使用这些命令进行系统环境设置
	/usr/bin 存放系统命令的目录，普通用户和超级用户都可以执行。这些命令和系统启动无关，单用户下不能执行
		单用户类似windows的安全模式
	/usr/sbin 只有超级用户可以执行
	/boot	系统启动目录，保存系统启动相关文件，如内核文件和启动引导程序grub文件等。
		记得备份
	/dev	设备文件（黄色展示）
	/etc	默认配置文件目录
	/home	普通目录的家目录 /home/user1
			/root/
	/lib	函数库
	/lost+found 系统崩溃或意外关机的碎片文件
		fsck文件检查修复时会使用到
	/media	挂载目录 媒体设备 CD-ROM等
	/mnt	挂载目录 U盘或移动硬盘
	/misc	挂载目录 NFS服务的共享目录
	/opt	第三方安装软件的保存位置（已过时）
		/usr/local/	主流的安装位置
	/proc	虚拟文件系统，内存中。进程信息、硬件信息
	/sys	虚拟文件系统，内存中。内核相关信息
	/root	
	/srv	服务数据目录。
	/tmp	临时目录。可以清空
	/usr	系统软件资源目录。
		Unix Software Resource 
	/var	动态数据保存位置。日志，缓存，软件运行时产生的文件（数据库）
	服务器注意事项
		远程服务器不允许关机，只能重启
		重启时应该关闭服务
		不要在访问高峰执行高负载命令
			压缩 扫描 查找 备份
		远程配置防火墙不要把自己踢出服务器
			配置服务每5分钟清空防火墙配置，待防火墙配置测试成功后再关闭服务
		指定合理密码并定期更新
		合理分区权限
		定期备份数据和日志
			两地三备份
04 Linux常用命令 文件处理命令
04.1 命令格式与目录处理
	命令格式 命令 [-选项] [参数]
		-a = --all
	ls = list
		-a	所有文件，包括隐藏（以.开头）
		-l	详细信息（long）
			权限 引用计数 所属用户 所属组 文件大小（字节）修改时间 文件名
			文件有访问时间 状态修改时间 数据修改时间
			-rw-r--r--		rwx
			第1位
				-普通文件
				d目录
				l软链接
			2~4	所有者权限 u
			5~7 所属组权限 g
			8~10 其它人权限 o
			x 执行权限，只有脚本和程序才拥有
		-d	查看目录，仅显示目录本身，不显示目录下文件
		-h	人性化显示 K显示千字节
		-i	查看inode号
	目录处理命令
		mkdir = make directory
			直接创建文件 mkdir /tmp/xiaodianying
				mkdir -p /tmp/Japan/boduo
		cd = change directory
		pwd = print working directory
		rmdir = remove directory 删除空目录
		cp = copy
			-r 复制目录 -p 保留文件属性（包括修改时间）
		mv = move 移动/更名
			不需要-r选项，直接移动文件夹
		rm = remove
			-r 删除目录 -f 强行删除
			数据恢复公司价格昂贵
		
		clear = Ctrl+L
	文件处理命令
		touch 创建空文件
			touch "program files"
		cat 查看文件内容
			-n 显示行号
			tac 反向列示
		more 分页显示文件
			空格 或 f 翻页
			回车 换行
			q	退出
		less 可以向上翻页 pageup向上翻
			/ 查找关键词
				n 查找下一条
		head 查看前几行（看脚本注释）
		tail 查看最后几行（-f 看日志）
			-n 行数 默认10行
	链接命令
		ln = link
			-s [原文件] [目标文件]    软链接
		文件类型 l 软链接文件 权限 rwx*3
			软链接=快捷方式 权限依赖于原文件权限
		硬链接 类似 cp -p 但会同步更新
			原文件被删除后硬链接依然可以访问
			ls -i 查看文件的i节点 硬链接文件的i节点与原文件相同
			注：硬链接不能跨分区
04.2 权限管理命令
	chmod	修改权限
		ugo 所有者、所属组、其它人
		所有者 和 root 可以执行chmod
		chmod [{ugoa}{+-=}{rwx}] 
			-R 目录递归
			chmod 764 file1.txt
			chmod g+w file1.txt
		目录的读写执行权限
			r: 列出目录中的内容 ls
			w: 可以创建删除文件/目录 
				是否可以删除文件决定于所在目录的权限
				区别于文件的写权限是指可以修改文件内容
			x: 可以进入这个目录 cd
			目录的rx权限基本同时存在
	chown = change file ownership 修改所有者
		chown user file.txt
			只有root可以执行
	chgrp = change file group 修改所属组
	umask -S	显示默认权限
		默认文件与目录权限 rw-r--r-- rwxr-xr-x
		每个用户只能有一个缺省组，创建文件时默认属于缺省组
		缺省创建的文件没有x权限
		0022 特殊权限 权限掩码 777-022=755 rwxr-xr-x
		umask 023 设置默认权限
04.3 搜索命令
	find 不建议在高负载时使用
		everything软件 windows
		find [搜索范围] [匹配条件]
		-name 查找文件名
			find /etc -name init 精确匹配 *init* 模糊匹配 ?匹配单个字符
			-iname 不区分大小写
		-size +2048 >2048*512字节1MB的文件 -n小于 n等于
		-user root 查找所有者为root的文件
		-group 属于所属组的文件
		-amin 访问时间
		-cmin 文件属性改变时间
		-mmin 文件内容改变时间
			-mmin -5 查找5分钟内被修改过内容的文件
				+n 超过n分钟
		-a and表示同时满足
			find /etc -size +163840 -a -size -204800
		-o or或者
		-type 文件类型 f文件 d目录 l软链接
		-exec/-ok {} \; 对搜索结果进行操作 注意有空格
			find /etc -name inittab -exec ls -l {} \;
			-ok 有确认操作
		-inum 根据i节点查找
			ls -i 查看i节点
			用于操作文件名比较复杂的文件
			用于查找硬链接文件
	locate 快速查找 查找文件资料库内容
		locate file1.txt
		/var/lib/mlocate/mlocate.db 文件资料库
		无法查找到新创建的文件
		updatedb 更新文件资料库 后可以查找到新创建的文件
			但依然找不到/tmp目录下的文件
		-i 不区分大小写
	which 查找命令
		可以查看到别名 alias rm='rm -i'
			-i 表示需要确认
		whereis 同时列出帮助文档位置
	grep 文件内容搜索
		grep multiuser /etc/inittab
		-i 不区分大小写 -v 排除指定字符串
		grep -v ^# /etc/inittab 去除#开头的行
04.4 帮助命令
	man    manual 
		不但可以查看命令帮助也能查看配置信息
		搜索： /-a   n下一个
		查看配置文件帮助：
			直接 man services      不需要路径
		man passwd      既有命令又有配置文件
			man1 命令的帮助
			man5 配置文件的帮助
		man 5 passwd
	whatis    只看命令帮助文档name部分
		apropos   配置帮助文档的name部分
	touch --help 查看命令选项
	help 显示内置命令，例如cd umask if/while，没有命令路径
04.5 用户管理命令
	useradd    添加新用户
		passwd yangmi
			e--@ abcd 1234
	who		查看登陆用户信息
		一个用户可以多次登陆
		tty	本地终端
		pts 远程终端
		登陆时间 主机地址
		w命令
			up 连续运行时间
			1分钟 5分钟 15分钟 负载情况
			JCPU 累计CPU占用时间
			PCPU 当前命令占用CPU时间
04.6 压缩解压命令
	.zip linux与windows默认存在解压工具
	.gz 格式
	gzip boduo  压缩
	gunzip boduo.gz
		gzip 不能压缩目录且压缩后会删除原文件
	tar		打包 并压缩
		-c 打包
		-v 显示详细信息
		-f 指定文件名
		-z 压缩
		
		tar -zcf Japan.tar.gz Japan(目录)
		解包 -x
		tar -zxf Japan.tar.gz 
	zip
		window下支持几乎所有linux的压缩包
		-r 压缩目录
		zip boduo.zip boduo
	bzip2 -k 保留原文件
		tar -jcf / jxf

04.7 网络命令
	write	给指定用户发送信息
		ctrl+D 结束
	wall    向所有用户发信息
	ping -c 次数
		packet loss 丢包率
	ifconfig	interface configure
		查看网卡信息
			eth0 本地第一块网卡
			lo 回环网卡 127.0.0.1
		ifconfig eth0 192.168.1.125	配置网络地址
	mail 	发送电子邮件
		mail root
			ctrl+D 结束
		没有参数直接查看
			输入序列号查看
			h 查看列表
			d 删除
			q 退出
		一般会收到系统信息，系统邮件建议及时查看
	last	查看用户登录信息，以及重启信息
	lastlog	查看最后登录的信息
		-u 502	根据uid信息查看用户登录信息
	traceroute 查看主机到网站的命令
		traceroute www.baidu.com
	netstat	查询网络状态
		-t TCP协议
		-u UDP协议
		-l 监听
		-r 路由
		-n 显示ip地址和端口号
		netstat -tlun    查看本机监听的端口
		netstat -an		查看所有网络连接
		netstat -rn 	查看路由表
	setup	配置网络服务
		只有redhat才有
		service network restart
		在centos7下没有对应功能
	mount	挂载
		mount [-t 文件系统] 设备文件名 挂载点
		mount -t iso9660 /dev/sr0 /mnt/cdrom
			使用虚拟机的右下角光盘图标
			-t 参数可以省略
		umount /dev/sr0	卸载
			退出挂载点才能卸载
04.8 关机重启命令
	shutdown
		-c 取消 -r 重启 -h 关机 
		时间 now 
		例： shutdown -h 8:30
		能够正确在关机前保存服务数据
		每半年可能出现一次由于关机导致硬盘损坏的情况也很正常
	其它关机命令	halt	poweroff=直接断电	init 0
	其它重启命令	reboot	init 6
	系统运行级别 0：关机 1单用户(安全模式) 2 不完全多用户 3完全多用户 4 未分配 5 图形界面 6重启
		NFS network file system 网络文件系统
			网络文件共享（不安全）
		cat /etc/inittab
			5 - X11    window X 桌面系统
		runlevel   查询运行级别
			N 3		N：上一个运行级别
	logout
		退出登录
05 文本编辑器Vim
05.1 Vim常用命令
	vim filename
		i a o 进入插入模式
		大写 表示行首 行尾 下一行
		: 进入编辑模式
			set number 显示行号 nonu 取消行号
			:813 跳转到813行
		x 删除字符
		dd 删除行（剪切）
		D  删除当前位置到行末
		gg 到第一行
		G  到最后一行
		$  移动到行尾
		yy 复制当前行
		p	粘贴到行下面
		r	替换一个字符
		R	进入替换模式
		u	撤销
		搜索和替换
			/+搜索内容 例如/ftp
				n 下一个
				:set ic  不区分大小写 noic 区分大小写
			:%s/old/new/g		全文替换old为new
			:n1,n2s/old/new/g   替换n1行到n2行的内容
			......./c		替换前确认
		保存退出
			ZZ	保存退出
			:wq! 可以强制保存所有者都没有写入权限的文件
05.2 Vim使用技巧
	:r 文件名 	导入:文本内容
	:!命令 		直接执行命令
		:r !date	直接写入时间
	定义快捷键
		:map Ctrl+v+p I#<ESC>
			显示 :map ^P I#<ESC>
			表示 使用Ctrl+P在行首插入#并返回命令模式
		替换命令中^表示行首
			:1,4s/^/#/g		在行首插入#
			:1,4s/^#//g		去除行首#
			:1,4s/^/\//g	在行首插入\
				命令前加入\不使用命令的转义
		:ab mymail mk3517@126.com	输入mymail时替换为 mk3517@126.com
	vim配置文件（重启后有效）
		~/.vim.rc
			set nu		编辑模式命令
06 软件包管理
06.1 简介
	软件包 源码包 二进制包（rpm）
	安装软件后可以直接删除安装目录，不会有残留文件
		源码包安装1G左右的操作系统需要3天左右时间
06.2.1 rpm命令
	命名规则
		httpd-2.2.15-15.e16.centos.1.i686.rpm
		软件包名-软件版本-发布次数-Linux平台-硬件平台.rpm
			i686 i386 i486 i586 可以在任何机器上安装
			x64只能在64位机器上安装
			noarch 任何硬件平台
			包名 = 软件包名(httpd)
		rpm依赖性
			树形依赖 a->b->c
			环形依赖 a->b->c->a
				用一条命令同时安装a b c
			库依赖(模块依赖) .so结尾的依赖性
			www.rpmfind.net
	yum在线管理
06.2.2 rpm命令管理
	包全名： 操作没有安装的软件包时使用
	报名： 操作已安装的包。路径： /var/lib/rpm/中的数据库
	rpm -ivh 包全名
		-i 安装
		-v 显示详细信息
		-h 显示进度信息
		--nodeps 不检测依赖性
		-U 升级
		-e 卸载 只跟包名（不是全名）
06.2.3 rpm命令管理-查询
    rpm -q 包名	
	rpm -qa | grep httpd
		-qi 显示详细信息
		-qip 包全名 查询未安装包信息
		-ql 包名 查找包中文件安装位置（同样可以加p）
		-qf 文件名 查询文件属于哪个包
		-qRp 包全名 查询包的依赖包
06.2.4 rpm命令管理-校验、文件提取
	rpm -V 已安装的包名
		S	文件大小改变
		M	文件类型或权限改变
		5	MD5码改变
		D	?
		L	文件路径改变
		U	文件的所有者改变
		G	文件的所属组改变
		T	文件的修改时间改变
		
		c	配置文件
		d	普通文件
		g	鬼文件（不应存在的文件）
	rpm2cpio 包全名 | cpio -idv .文件绝对路径  			表示拷贝到当前目录
	cpio -idv < [文件]
06.3.1 yum在线管理
	网卡配置文件：
		/etc/sysconfig/network-scripts/ifcfg-eth0
			ONBOOT="yes"		#打开网卡
	配置网络yum源
		/etc/yum.repos.d/*.repo
	配置文件.repo
		[base]
		mirrorlist  镜像地址
		=baseurl	原地址
		enabled		1生效（默认）
06.3.2 yum在线管理 		
	yum list  列出仓库中的软件包
	yum search 包名（不是包全名）
	yum -y install 包名 
		-y 自动yes
	yum -y update 包名（必须加，否则会导致全部升级，包括内核，内核升级后需要配置才能正常开机）
	yum -y remove 包名（卸载时会卸载依赖包） 尽量不卸载
	yum 软件包组管理
	yum grouplist  在虚拟机中直接查询可以看到英文组名
	yum groupinstall 组名   仅支持英文
	yum groupremove 组名
06.3.3 yum在线管理  光盘yum源搭建
	步骤 
		1.搭载光盘
		2.配置/etc/yum.repos.d/
			配置文件中不能出现不必要的空格（行首或行尾）
06.4.1 源码包与RPM包的区别
	RPM包默认安装位置
		/etc/  配置文件
		/usr/bin/ 执行文件
		/usr/lib/ 函数库
		/usr/share/doc/ 使用手册
		/usr/share/man/ 帮助文件
		/etc/rc.d/init.d/ 服务安装位置  
			可用service启动
			service httpd start
	源码包 手工指定 /usr/local/软件名/
		service命令无法找到手动指定的安装位置
		需要使用绝对路径启动
06.4.2 源码包管理
	1.安装GCC
	2.下载源码包
	3.源码保存位置 /usr/local/src/
	  软件包安装位置 /usr/local/
	4.进入源码目录 
		INSTALL 	安装说明
		README		使用说明
	5. ./configure	配置和检查
		./configure --help
		./configure --prefix=/usr/local/httpd/ 指定安装目录
		会生成Makefile文件
	6.make  make install
	
	源码包安装后直接删除目录就可以
06.5 脚本安装包
	Webmin图形管理界面
		ctrl+退格 删除字符

07 用户和用户组管理	
07.1.1 用户配置文件
	用户信息文件 /etc/passwd
	影子文件	/etc/shadow
	组密码文件	/etc/gshadow
	Linux中主要通过用户配置文件来查看和修改用户信息
	
	用户信息文件 /etc/passwd
	用户名:密码标识(x表示在shadow中):UID:GID:用户说明（可以为空）:家目录:登录之后的Shell
	UID: 0 超级用户  1-499:: 系统用户（伪用户）   500-65535:  普通用户
		将普通用户UID改为0就成为超级用户
		伪用户删除后会导致系统崩溃，也不能用于登录
	GID: 初始组ID 唯一，不建议修改 /etc/group 文件中保存
		cf 附加组：用户可以加入多个附加组，获取附加组权限
	家目录:
		普通用户: /home/用户名/
		超级用户: /root/
	Shell: 命令解释器
		标准Shell /bin/bash
		还有 /sbin/nologin 禁止登陆用户 等
07.1.2 影子文件
	/etc/shadow
		权限为000  只有root用户可以访问
		用户名:密码:修改日期:两次密码的修改间隔:密码有效期（天）:到期警告时间:宽限天数(-1不会失效):账号失效时间:
		密码 SHA512加密,* !!没有密码不能登录
		日期： 1970.1.1为标准时间 每天加1
			date -d "1970-01-01 160066 days"
			echo $(($(date --date="2014/01/06" +%s)/86400+1))  日期换算为时间值
		修改间隔: 间隔期内无法修改密码
07.1.3 组信息文件及组密码文件
	/etc/group
		组名:密码标识:GID:附加用户
		组密码：一般不用，知道组密码的组管理员用户可以修改用户组
07.2 用户和用户组管理
    家目录 /home/用户名/	/root/
	修改普通用户的UID为0后，用户成为超级用户，但家目录不会改变
	用户邮箱，每个用户都有
		/var/spool/mail/用户名/
07.3.1 用户和用户组管理-用户管理命令 useradd
	useradd	添加用户
		useradd -G group1 user1
		passwd user1
			***
		-c 用户说明
		-g 组名 必须已经存在的组
		-g 附加组 group1,group2
		-s shell 默认/bin/bash
	/etc/default/useradd	默认配置文件
		SKEL 模板文件
	/etc/login.defs	默认配置文件
		PASS_MIN_LEN	无效，现在在PAM中
07.3.2 用户和用户组管理-用户管理命令 passwd
	只有root可以修改其它用户密码
	passwd
		-S 查询密码状态(root权限)
		-l 锁定用户 passwd -l user1
		-u 解锁用户
		--stdin  管道
			echo "123"|passwd --stdin lamp
07.3.3 用户和用户组管理-用户管理命令 usermod
	usermod参数与useradd相同 -L 锁定 -U 解锁
	chage 修改密码状态
		-l 列出密码状态
		-d 修改密码修改时间
			chage -d 0 user1
			用户第一次登录后会提示重置密码
07.3.4 用户和用户组管理-用户管理命令 userdel
	userdel -r user1  删除用户和家目录
	用户切换命令su
		su root
			切换用户后环境变量并未改变
		su - root	（推荐）
			切换用户同时改变环境变量
		su - root -c "useradd user3"
			-c 仅使用一次，不切换用户
07.4 用户组管理
	groupadd [选项] 组名
		-g GID   手工设置组ID
	groupmod [选项] 组名
		-n 新组名
			groupmod -n user1x user1
	groupdel 组名
		如果有初始用户则组无法删除
		groupdel user1 不删除user1用户user1组无法删除
	gpasswd 选项 组名
		-a 用户名 添加用户附加组
		-d 用户名 删除用户
8 权限管理
8.1 ACL权限
8.1.1 ACL权限-简介与开启
	ACL简介：文件对多个组有不同权限，解决身份不足的问题
		模式与windows相同
	查看分区ACL权限是否开启
		dumpe2fs -h /dev/sda3
			Default mount options:		... acl		默认都支持
	开启ACL（默认都开启）
		mount -o remount,acl /
			重新挂载，重启后失效
		/etc/fstab
			defaults,acl
			在defaults后加入acl
			重启后永久生效
8.1.2 ACL权限-查看与设定
	查看
		getfacl 文件名
	设定
		setfacl 选项 文件名
			-m	设定权限
				setfacl -m u:st:rx ./project
				setfacl -m g:st:rx ./project
					ll -d project 多了个+号
			-x	删除指定权限
			-b	删除全部权限
			-d	设定默认权限
			-k	删除默认权限
			-R	递归设定权限
8.1.3 ACL权限-最大有效权限与删除ACL权限
	mask权限，用户权限与mask进行与
		setfacl -m m:rx ./project
			查看后面的#effective
	删除权限
		setfacl -x u:st ./project
			删除st用户的ACL权限
		setfacl -b ./project
			删除全部ACL权限
8.1.4 默认ACL权限与递归ACL权限
	递归是指父目录在设定ACL权限是，所有子文件和目录也会拥有相同的ACL权限
		setfacl -m u:用户名:权限 -R 目录    注意顺序
		执行之后添加的文件无法获取ACL权限
	默认ACL权限
		如果目录设定了默认ACL权限，子文件都会获得ACL权限
		setfacl -m d:u:用户名:权限 目录
8.2.1 权限管理-文件特殊权限-SetUID
	拥有SUID的程序执行时，该程序拥有文件所有者的身份
		ll /usr/bin/passwd
			-rwsr-xr-x     其中的s说明SUID
				在passwd运行时可以拥有root权限，修改/etc/shadow文件
	设定SUID
		chmod 4755 文件	(4表示SUID)（2表示SGID）(1表示SBIT)
		chmod u+s 文件
		chmod 755 文件/chmod u-s 文件    删除SUID
8.2.2 权限管理-文件特殊权限-SetGID
	拥有SGID的程序执行时，该程序拥有文件所属组的身份
		ll /usr/bin/locate
			-rwx--s--x 1 root slocate
			ll /var/lib/mlocate/mlocate.db
			-rw-r----- 1 root slocate
			由于有SGID权限，普通用户使用locate命令时可以访问mlocate.db文件
	普通用户在拥有SGID的目录中创建文件时，该文件的所属组为目录的所属组
		没啥用
	设置SGID
		chmod 2755 文件
		chmod g+s 文件
		chmod g-s 文件
8.2.3 权限管理-文件特殊权限-Sticky BIT
	SBIT粘着位 只对目录有效
		目录拥有粘着位时，普通用户无法删除其它用户建立的文件
	ll -d /tmp/
		drwxrwxrwt
	设置SBIT
		chmod 1755 目录
		chmod o+t 目录
		chmod o-t 目录
		
8.3 权限管理-文件系统属性chattr权限
	chattr [+-=] [选项] 文件
		对root用户也生效
		i: 只读（不能删除、改名、改内容）
			对目录 不能新建或删除目录下文件
		a: 只能增加文件内容（无法用vim保存）
			对目录 只能增加文件
	lsattr 选项 文件		查看chattr权限
		-a 显示所有文件和目录
		-d 对目录仅列出本身属性
8.4 权限管理-文件特殊权限-sudo权限
	root将系统命令赋予普通用户执行
	visudo
		打开的是/etc/sudoers文件
		root ALL=(ALL) ALL
		man 5 sudoers
			看帮助文件
		ALL= 定义执行的本地的IP
		(ALL) 执行身份，默认ALL
		ALL 授权的命令名：
		%group1 ALL=(ALL) /sbin/shutdown -r now
			group1组 可以执行 。。。。。。
			命令必须写绝对路径
	sudo -l
		查看可以执行的sudo命令
9 文件系统管理
9.1 回顾分区和文件系统
	见2.2
	ext2 支持16GB
	ext3 支持16TB
	ext4 支持1EB 支持16TB文件
9.2.1 文件系统常用命令
	df [选项] [挂载点]  显示磁盘状态
		-a 显示隐藏分区
		-h 人性化单位显示
	du [选项] 目录 看目录的大小
		-h 人性化单位显示
		-s 只显示总量
		du 统计结果可能比df显示的占用空间小，由于df还有其他浪费的空间
			长期不重启，占用磁盘空间会变大
	fsck [选项] 设备文件名   文件系统修复，不建议手工使用
	dumpe2fs 设备文件名		仅支持ext文件系统 不支持xfs文件系统
		dumpe2fs /dev/sda1
9.2.2 挂载命令
	mount [选项]
		-l 显示已挂载的命令，默认
		-a 按/ect/fstab的内容，自动挂载
			光驱、移动硬盘不要写入自动挂载
		-t 文件系统
			fat32 -> vfat
		-L 卷标
		-o 特殊选项
			remount 重新加载（使特殊选项生效）
			noexec 分区下程序不能执行
			exec 	支持程序执行（默认）
				mount -o remount,noexec /home/
		mount [-t 文件系统] [-L 卷标] [-o 特殊选项] 设备文件 挂载点
9.2.3 挂载光驱与U盘
	linux建议 mnt下挂光盘 media下挂U盘
	挂载光盘
		创建挂载点 mkdir /mnt/cdrom/
		光盘放入光驱
			在VM虚拟机上双击光盘图标
		挂载
			mount /dev/sr0 /mnt/cdrom/
				ll /dev/cdrom
		卸载后才能弹出光盘
			umount 设备文件或挂载点
			umount /mnt/cdrom
	挂载U盘
		插入U盘
			在VM虚拟机上点一下后插入U盘
		查看设备文件名
			fdisk -l
				linux默认不支持ntfs
		挂载
			mount -t vfat /dev/sdb1 /mnt/usb
		卸载后才能拔下U盘
9.2.4 支持NTFS文件系统
	需要安装驱动
		编译内核
		使用第三方软件
	使用https://tuxera.com/opensource/ntfs-3g_ntfsprogs-2017.3.23.tgz
		解压
		./configure
		make
		make install		
	mount -t ntfs-3g 设备文件 挂载点
		只能读取，不能写入
9.3.1 fdisk分区
	fdisk /dev/sdb
		d 删除分区
		l 显示分区类型
		m 帮助
		n 新建分区
		w 保存退出
		q 取消
		ctrl+backspace 才能删除
	新建分区
		n 新建分区
		p 主分区
		分区号 1
		起始柱面 1
		终止柱面 +2G
	创建扩展分区
		e 扩展分区
	创建逻辑分区
		l 逻辑分区
	partprobe 重载分区表
	格式化分区
		mkfs -t ext4 /dev/sdb1
9.3.2 自动挂载与fstab文件修复
	写入/etc/fstab文件
		第一个字段 设备文件名或UUID
			/dev/sda1或UUID=…… UUID可以避免磁盘顺序变换后无法挂载
			blkid 查看UUID
		第二个字段 挂载点
		第三个字段 默认文件系统
		第四个字段 特殊权限(mount -o )
		第五个字段 是否dump备份 0：不备份 1：每天备份 2：不定期备份
		第六个字段 是否自动使用fsck检查 0：不检查 1比2优先级高，先扫描小的，建议2或更高
	mount -a 检查一下
	fstab文件修复
		写错后重启无法修改/dev/fstab文件
		使用mount -o remount,rw /
10 Shell基础
10.1 Shell概述
	外层应用->Shell命令解释器->内核->硬件
	Shell分类
		Bourne Shell:sh,ksh,Bash
			Bash:与sh兼容，Linux主流Shell
		C Shell:BSD版UNIX中使用，类似C语言
	/etc/shells
		支持的Shell类型
		输入sh后可切换为sh Shell界面，exit退出
		nologin一般是伪用户的Shell
			vim /etc/passwd
10.2 脚本执行方式
	echo [选项] [输出内容]
		-e 支持反斜线字符转换
			echo -e "ab\bc"  \b退格，输出ac
			echo -e "\e[1;31mabcd\e[0m"
				\e[1; 开始颜色输出 \e[0m 结束颜色输出
				31m 红色 30m 黑色 32m 绿色 
				33m 黄色 34m 蓝色 37m 白色
	脚本hello.sh：
		#!/bin/Bash
		#The first program
		echo -e "hello world"
	直接运行
		chmod 755 hello.sh
		./hello.sh
	调用Bash执行
		Bash hello.sh
	cat -A hello.sh
		回车显示为$
		Dos回车显示为^M$
		dos2unix hello.sh
10.3 Bash的基本功能
10.3.1 历史命令与补全
	历史命令
		history  查看历史命令
			-c 清除 -w 强制保存
			保存在 ~/.bash_history
			默认保存1000条
			/ect/profile中HISTSIZE定义
		使用上下箭头调用
		!n 重复执行第n条命令
		!字符串 重复执行以字符串开头的命令
	补全 Tab
10.3.2 命令别名与常用快捷键
	alias 别名=“原命令”
		直接alias查看别名
	unalias 别名  取消别名
	命令顺序 
		第一 绝对路径
		第二 别名
		第三 内部命令，找不到执行文件， whereis cd
		第三 PATH环境变量中的外部命令
	让别名永久有效
		/root/.bashrc   家目录下.bashrc
	快捷键
		ctrl+A 行首
		ctrl+E 行尾
		ctrl+C 强制终止
		ctrl+L 清屏
		ctrl+U 剪切光标之前的所有字符
		ctrl+K 剪切光标之后的所有字符
		ctrl+Y 粘贴
		ctrl+R 历史命令搜索
		ctrl+D 退出终端=logout
		ctrl+Z 暂停进程
10.3.3 输入输出重定向
	标准输入输出
		键盘 /dev/stdin 0（文件描述符） 标准输入
		显示器 /dev/stdout 1	标准输出
		显示器 /dev/stderr 2	标准错误输出
	输出重定向
		命令 >文件   覆盖
		命令 >>文件	追加
		错误输出重定向
			命令 2>文件   命令 2>>文件
	同时输出重定向到
		命令 >文件 2>&1
		命令 &>文件
		命令 >>文件a 2>>文件b
	输出到空
		命令 &>/dev/null
	输入重定向
		命令<文件
		wc [选项][文件名]		统计命令
			-c	统计字节数
			-w	单词数
			-l	行数
		wc<abc
10.3.4 多命令执行与管道符
	命令1;命令2   	没有联系
	命令1&&命令2  	命令1正确后执行命令2
	命令1||命令2	命令1不正确执行命令2
	data;dd if=/dev/zero of=/root/testfile bs=1k count=100;date
	管道符
		命令1|命令2		命令1正确的输出作为命令2的输入
			ll -a /etc/ | more
			netstat -an | grep ":22"
10.3.5 通配符与其他特殊符号
	?,*,[abc],[a-z],[^1-9]
	Bash中的特殊符号
		''	单引号中内容特殊符号均没有含义，例如$ `
		“”	双引号中特殊符号有意义
		``	反应号的内容是系统命令，例如 abc=`date`
			$()作用一样		echo $(ls)
		#	注释
		$	调用变量值
		\	转义符，\“ 就是"
10.4 Bash变量
10.4.1 用户自定义变量
	变量默认类型都为字符串型，数值必须指定为数值型
	变量的值有空格时需要用单双引号包含
	变量可以叠加 变量用"$变量名"或${变量名}
	命令用 $(命令) 表示
	变量分类
		用户自定义变量（本地变量）
		环境变量
		位置参数变量
			用于脚本传递参数
			变量名和作用是固定的
		预定义变量
	设置变量
		变量名=变量值
	set		查看所有变量
	unset	删除变量
10.4.2 环境变量
	用户自定义变量只在当前的Shell中有效
	在所有当前Shell的子Shell中也生效，
		输入bash进入子Shell
		pstree查看进程树
	配置文件中的环境变量在所有Shell生效
	设置环境变量
		exprot 变量名=变量值
		exprot 变量名	将本地变量声明为环境变量
	查询环境变量
		env
	unset	删除变量
	常用环境变量
		PATH	用冒号分割的系统路径
			PATH="$PATH":自己的路径
		PS1(只能用set看到) 	提示符变量
			'[\u@\h \W]\$ '
10.4.3 位置变量
	命名
		$n	0代表命令本身 1~9代表参数 ${10}
			sum=$(($1+$2)) 求和
		$# 参数个数
		$* 所有参数输出
		$@ 产生参数数组
			数组可以用for循环拆开
				for x in "$@"
10.4.4 预定义变量
	命名
		$?	上一个命令的返回值
			0：正确 其它：报错值
		$$	当前PID
		$!	后台执行的最后一个PID
	接收键盘输入
		read [选项][变量名]		按回车结束输入
			-p "提示信息"
			-t 秒数
			-n 字符数
			-s 			隐藏输入
			read -t 30 -p "Please input your name:" name
			echo "Name is $name"
10.5.1 数值运算与运算符
	declare [+/-][选项] 变量名
		-	设定类型属性
		+	取消类型属性
		-i	声明为整数型
		-x	声明为环境变量，与export相同
		-p	显示变量类型
		declare -i cc=$aa+$bb		cc=aa+bb
	使用expr
		dd=$(expr $aa + $bb)
	使用$((表达式))或$[表达式]
		ff=$(($aa+$bb))
10.5.2 变量测试与内容变换
	x=$(y:-默认值)  y未设置或为空时x=默认值，否则x=y
	x=$(y:=默认值)
	x=$(y:?错误输出)	y未设置或为空时错误输出，否则x=y
			没有:时 y可以为空值
10.6 环境变量配置文件
10.6.1 简介
	source 配置文件 （= . 配置文件）
		让配置文件直接生效
	环境变量：PATH PS1 HISTSIZE HOSTNAME等
	对所以用户生效的配置文件
		/etc/profie
		/etc/profile.d/*.sh
		/etc/bashrc
	仅对当前用户生效
		~/.bash_profile
		~/.bashrc
10.6.2 作用
	执行顺序
	/etc/profile
		/etc/profile/*.sh
	~/.bash_profile
	~/.bashrc
	/ect/bashrc		<- no login入口
		/etc/profile/*.sh
	作用
		/etc/profile
			登录用户信息 USER LOGNAME MAIL PATH HOSTNAME umask
			调用/etc/profile.d/*.sh (lang.sh->i18n 语言设置)
		~/.bash_profile
			调用~/.bashrc
			追加~/bin到PATH环境变量
			export PATH
		~/.bashrc
			定义别名
		/etc/bashrc
			定义PS1 登录提示符
			当no login用户调用
				/etc/profile/*.sh
10.6.3 其他配置文件和登录信息
	~/.bash_logout		注销时调用
	~/.bash_history		历史命令
	/etc/issue			登录信息（本地用户）
		欢迎信息（建议写入警告信息）
		\l		登录终端
	/etc/issue.net 远程登录
		没有转义符
		启用
		/etc/ssh/sshd_config
			Banner /etc/issue.net
	/etc/motd	登录后信息
11 Shell编程
11.1 基础正则表达式
	grep awk sed等命令支持正则表达式
	一般命令（ls find cp）仅支持 通配符
		用来匹配文件名
		* ? []
	正则用来匹配复杂字符串
		grep 提取包含的一行
		*	前一个的0次或n次
		.	换行符以外的一个字符
		^	行首	
		$	行尾	^$表示空白行
		[] [^]	^取反
		\	转义符
		{n,m}	在bash中使用\{n,m\}
			出现n-m次，m可省略
		
		() + ? linux中没有
11.2 字符截取命令
11.2.1 cut命令
	字段提取命令
	cut [选项] 文件名
		-f 列号,行号 -f 2 提取第二列 或 -f 2,3 提取第二列第三行
		-d 分隔符，默认\t
	缺陷：不能识别多个空格，使用awk命令解决
11.2.2 printf命令
	printf '输出格式' 输出内容
		%s	字符串	
		%i	整数	
		%m.nf	浮点数
	printf不支持管道符，可以用一下方式打开文件
		printf '%s' $(cat student.txt)
			一行作为一个输入
	awk中的print 在输出后的每行加上换行符
11.2.3 awk命令
	覆盖cut功能，并支持编程
	awk '条件1{动作1} 条件2{动作2}...' 文件名
	条件（Pattern）: 例如x>5
	动作: printf 流程控制
	例1：df -h | awk '{print $1 "\t" $5}'
	例2: df -h | grep sda1 | awk '{print $5}' | cut -d "%" -f 1
	BEGIN 命令	最先执行
		df -h | awk 'BEGIN{print "test !!"} {print $1 "\t" $5}'
	FS 内置变量 注意要加BEGIN
		cat /etc/passwd | grep "/bin/bash" | awk 'BEGIN{FS=":"} {print $1 "\t" $3}'
	END 命令	在最后执行
	条件 命令
		awk 'BEGIN{FS=":"} $7=="/bin/bash"{print $1 "\t" $3}' /etc/passwd 
11.2.4 sed命令
	轻量级流编辑器
	可以通过管道符直接修改命令的结果
	sed [选项] '[动作]' 文件名
		-n  仅输出修改项
		-e  多条sed命令，用分号隔开
			sed -e '2s/dev/dec/g;3i abc' df.txt 
				注：测试中 i命令不可以在前面
		-i	修改原文件
		动作
			p  输出指定行
				sed -n '2p' student.txt
			d  删除指定行
				sed '2,4d'	student.txt
			i  指定行前插入，\表示换行
				sed '2i abc' student.txt
			a  指定行后插入
				sed '2a ab\
				c' student.txt
			c	替换对应行
			s	替换字符串,'行号s/旧字符串/新字符串/g'
				sed '1s/dev/dec/g' student.txt
11.3 字符处理命令
	sort 排序
		按行排序
		sort [选项] 文件名
			-f 忽略大小写
			-n 以数值进行排序
			-r 降序
			-t 指定分隔符，默认\t
			-k n[,m] 指定范围，与-t配合使用，指定第几个字段
				sort -t ":" -k 3,3 /etc/passwd
	wc 统计
		wc [选项] 文件名
			-l	行 -w	单词数	-m  字符数
			wc /etc/passwd
			df -h|wc -l
11.4 条件判断
	测试条件
	-d 文件名	是否是目录
	-e 文件名	是否存在
	-f 文件名	是否是普通文件
	-r 文件名	拥有读权限，只要有一个有权限
	-w 文件名	拥有写权限
	-x 文件名	拥有执行权限
	整数1 -eq 整数2	判断两个整数是否相等
		ne gt lt ge le
	-z 字符串	是否为空
	-n 字符串	不为空
	字符串1 == 字符串2 
		!=
	文件1 -nt 文件2  文件1比文件2新
	文件1 -ot 文件2  文件1比文件2旧
	文件1 -et 文件2  文件1和文件2 INode是否一致（硬链接）
	判断1 -a 判断2 与
		-o 或 
	! 判断	取反
	命令
	test -e /root/install.log
		[ -e /root/install.log ]  注意：[后必须要空格
	echo $?
		0 表示正确
	[ -d /root ] && echo "yes" || echo "no"
11.5 流程控制语句
11.5.1 if语句
	单分支
	if [ 判断 ];then
		程序
	fi
	或
	if [ 判断 ]
		then
			程序
	fi
	双分支
	if [ 判断 ];then
		程序
	else
		程序
	fi
	多分支
	if [ 判断 ];then
		程序
	elif [ 判断 ];then
		程序
	else
		程序
	fi
	命令
	date +%Y%m%d
	nmap -sT 192.168.1.156  扫描目标主机
		需要安装
11.5.2 case语句
	case $变量 in
		"值1")
			程序
			;;
		"值2")
			程序
			;;
		*)
			程序
	esac
11.5.3 for循环
	for 变量 in 值1 值2 ...
		do
			程序
		done
	例
	for i in $(df -h)
		do
			echo $i
		done
		空格分开多个变量
	次数循环
	for (( 初始条件;判断;赋值 ))
	例
	s=0
	for (( i=0;i<3;i=i+1 ))
		do
			echo s=$(( $s+$i ))
		done
	echo $s
11.5.4 while与until
	while [判断]
		do
			程序
		done
	until 与while相反
12 Linux服务管理
12.1 服务简介与分类
	RPM包默认安装的服务
		独立的服务
		基于xinetd服务
			通过xinetd服务调用
			例如：rsync 网络备份服务
	源码包安装的服务
	启动与自启动
		类似windows的服务
		状态：启动 停止 暂停 恢复
		启动类型：自动 手动 禁止
	查询已安装的服务
		RPM包安装的服务
			chkconfig --list
			0-6 系统启动类型
			启用：自启动
		源码包安装的服务
			查看安装位置	
			RPM包安装在默认位置中
				/etc/ /etc/rc.d/init.d/ ...
				执行severic ... start时 检查/etc/rc.d/init.d/下的启动脚本
			而源码包一般在/usr/local/下
			不推荐把源码包配置为RPM包安装的服务
12.2 RPM服务的管理
12.2.1 独立服务管理
	RPM包安装的默认位置
		/etc/init.d/	启动脚本位置
			=/etc/rc.d/init.d/	软连接
		/et/xinetd.d	xinetd服务的启动脚本
		/etc/sysconfig/	初始化环境配置文件
		/etc/			配置文件位置
		/etc/xinetd.conf xinetd配置文件
		/var/lib/		服务产生的数据
			例：/var/lib/mysql/
		/var/log/		日志
		特殊位置
			例：httpd /var/www/html/ 保存网页
	启动方法
		/etc/init.d/独立服务名 start|stop|status|restart
		= service 独立服务名 start|stop|status|restart
			RedHat版Linux专用命令
			service --status--all  列出所有服务状态
	自启动方法
		chkconfig --level 2345 httpd on
			2345 启动类型，默认可省略(推荐)
				chkconfig httpd off
		修改/etc/rc.d/rc.local
			=/etc/rc.local
			该脚本在启动程序完成之后，会执行这个脚本
			注： /var/lock/subsys/local	文件修改时间就是系统启动时间
		ntsysv
			图形界面 在启动的服务前输入*
12.2.2 基于xinetd服务的管理		很少，不推荐使用
	安装xinetd与telnet
		yum -y install xinetd
		yum -y install telnet-server	安装telnet服务端
	配置 /etc/xinetd.d/telnet		CentOS7 不支持
		disable = no		启动
		chkconfig telnet on			自启动并启动
12.3 源码包服务的管理
	查看源码包的安装说明
		例： apache: /usr/local/apache2/bin/apachectl start|stop
	自启动
		将源码包的启动命令加入 /etc/rc.d/rc.local
	使用service命令管理
		将启动脚本软链接到/etc/init.d/下
			ln -s /usr/local/apache2/bin/apachectl /etc/init.d/apache
	chkconfig命令与ntsysv命令都能识别
		在以上启动脚本中加入
			#chkconfig: 35 86 76		运行级别 启动顺序 关闭顺序
			#description: source package apache
				注：这两句都必须有。第一句的序号不能与其它服务重复，可以取大一点的值
		chkconfig --add apache
			--del 去除
13 进程管理
13.1.1 进程查看
	作用：查看服务器状态，查看所有进程，杀死进程
	ps     查看进程
		ps aux = ps -le 查看所有进程
			a 前台 x 后台 u 当前
			l 详细信息 -e 所有进程
			USER PID %CPU %MEM 
			VSZ 虚拟内存 RSS 实际内存KB
			TTY 登录终端 ?表示系统自己生成的
				tty1-7 本地终端 pts/0-255 远程终端
			STAT 进程状态 R/S睡眠/T停止/s包含子进程/+后台
			START 启动时间 TIME 占用CPU时间 COMMAND 启动命令
	top		查看健康状态
		默认3秒更新一次
		以CPU占用率排序
		第一行：
			当前时间 运行时间 登录用户数 1分钟5分钟15分钟平均负债（单核为1）
		第二行
			进程总数 运行 睡眠 停止 僵尸进程（正在终止）
		第三行：
			用户占用 系统占用 改变过优先级的用户占用 空闲比 
			等待输入输出占用率 硬中断百分比 软中断百分比 
			虚拟时间百分比：虚拟机等待实际CPU的时间百分比
		第四行：内存
			总共 已使用 空闲 用于缓冲
		第五行：交换区
			同上
		
		交互(注意大小写)
			P:按CPU排序 M：按内存排序 N：PID排序 q：退出
	pstree		查看进程树
		-p	显示PID
		-u	显示所属用户
13.1.2 进程终止
	kill 命令
		-l 查看支持的信号
			1 SIGHUP 重启进程 restart命令
			9 SIGKILL 强制终止
			15 SIGTERM 正常终止 默认
		例: kill -1 PID
	killall 进程名
		例 killall -9 httpd
		-i 交互式
		-I 忽略大小写
	pkill = killall
		-t 按终端号踢出用户
		例 pkill -t -9 pts/1
			w 查询登录用户
13.2 工作管理
	把程序放入后台运行
		加&符
		按ctrl+z(暂停)
	查看后台工作
		jobs -l  显示pid
			+是最后一个（默认工作号） -是倒数第二个
	恢复到前台运行： 	fg %工作号 
	恢复到后台： 		bg %工作号
		注：有些命令比如top无法在后台运行，无法在后台运行
13.3 系统资源查看
	vmstat [刷新时间 刷新次数]
		vmstat 1 3   监听3次，每次1秒
			进程 内存 交换分区 IO 系统资源 cpu
	dmesg  开机时内核检测信息(启动信息)
		dmesg|grep CPU
	free 	查看内存使用状态
		-b 字节单位显示
			-k -m -g
		缓存cache是加速磁盘读取的
			先读到cache，下次读取时从cache读取
		缓冲buffer是加速磁盘写入的
	cat /proc/cpuinfo	查看CPU信息
		是内存文件，每次开机检测
	uptime 	显示平均负债， 相当于top的第一行
	uname
		-a 查看内核所有信息
		-r 内核版本
		-s 内核名字，显示 Linux
	file /bin/ls 	判断系统位数
		查看命令文件类型
	lsb_release -a   查看系统发行版本
		CentOS release 7.0 需要安装这个命令
			yum install -y redhat-lsb
	lsof [选项] 列出进程调用的文件
		-c 字符串  查看字符串开头的进程占用的文件
		-p PID     查看PID......
13.4 系统定时任务
	service crond start    定时任务启动（默认自启动）
	crontab -e 编辑  -l 查询   -r 全部删除
		格式：
			分钟 小时（0-23） 天 月 星期几（0=7星期日） 命令
			*表示任意时间
				45 22 * * * 命令   在22点45分执行命令
			, 多个时间
				10,20 22 * * * 命令 在22点10分，22点20分都执行命令
			- 连续多个
			*/n 每隔n周期
				*/10 4 * * * 命令   凌晨4点每10分钟执行一次
			同时出现 日和星期 是并列的
			* * * * * 命令 		每分钟执行
		注： 定时任务中的%必须加转义符\%包括脚本中
14 日志管理
14.1 简介
	CentOS6.3后用rsyslog取代syslog
		基于TCP
		后台数据库
		有日志消息的及时分析框架
		配置中可以写简单的逻辑
	日志服务(默认自启动)
		ps aux|grep rsyslog
	常见日志
		/var/log/cron		定时任务
		/var/log/cups		记录打印信息
		/var/log/dmesg		开机自检的信息
		/var/log/btmp		错误登录信息
			只能通过lastb查看
		/var/log/lastlog	所有用户登录信息
			只能通过lastlog命令查看
		/var/log/messages	message事件
		/var/log/mailog		邮件
		/var/log/secure		授权日志
		/var/log/wtmp		用户登录，注销，系统启动、关机
			只能通过last命令查看
		/var/log/utmp		用户登录信息
			w,who,users命令查看
	用源码包安装的服务的日志只会在安装的目录下
14.2 rsyslogd日志服务
	日志格式
		时间
		主机名
		服务名
		具体信息
	/etc/rsyslog.conf配置文件
		authpriv.*		/var/log/secure
		服务名[链接符号]日志等级	日志位置
		链接符号
			.   大于等于
			.=  等于
			.!	不等于
		等级
			*	所有等级
			debug info notice warning err 
			crit	临界状态
			alert	警告状态
			emerg	疼痛等级
		日志位置
			打印机 /dev/lp0
			发送给主机 @192.16810.210:514
			用户名，如root，用户必须登录
			不需要记录，~
		*.info	/var/log/messages   所有服务记录到messages文件
14.3 日志轮替
	www.lamobrother.net		官网
	一般一个每小时几万点击量的网站，一周100M左右
	日志操作：切割、删除、轮换
	httpd不支持删除操作
	linux自带日志切割工具
	日志命名规则
		配置文件中带有dateext参数时，日志名-日期 ，例如：secure.20180505
		不带时，最近的.1然后.2 。。。
	/etc/logrotate配置文件
		daily weekly monthly
		rotate n    保留n个
		compress	压缩
		create mode owner group		设置备份日志权限，create 0600 root utmp
		mail address 发送到address
		missingok 	日志不存在时忽略日志警告信息
		notifempty	为空时不轮替
		minsize		轮替最小值
		size		按大小轮替
		datext		使用日期后缀
		外部是全局配置，{}内是局部配置
	只维护/var/log/下的日志文件
	手工添加配置，处理源码包的日志
		/usr/local/apache2/logs/access_log {
			daily
			create
			rotate 30
		}
	logrotate命令
		logrotate [选项] 配置文件名
			-v 显示日志轮替过程
			-f 强制进行日志轮替
15 启动流程
15.1 CentOS 6.3以上的启动管理
15.1.1 运行级别
	0 关机 1单用户（类似安全模式） 2不完全的命令行模式（不含NFS） 3完全的命令行模式（标准字符界面）
	4系统保留 5图新模式 6重启动
	init n   n级别号
		init 0   关机
		init 5	 切换到图形界面
	runlevel	运行级别
	修改默认运行级别
		修改/etc/inittab文件
		CentOS 7中：
			systemctl set-default multi-user.target
			systemctl set-default graphical.target
15.1.2 系统启动过程
	BIOS->MBR->GRUB启动引导程序->加载内核->内核自检（区别于BIOS自检）->initramfs->		
		一些不常见的驱动写为函数模块放在/lib/下
			对于IDE硬盘驱动在内核中，而SATA驱动不在内核中
				initramfs系统（含SATA,USB,SCSI等驱动），在/boot/下，而/boot/是在GRUB中加载
	/sbin/init->/etc/init/rcS.conf->/etc/rc.d/rc.sysinit初始化->
		rc.sysinit 准备网络、磁盘等
	/etc/inittab->/etc/rc[0-6].d->
		按运行级别启动
		会按里面的K或S脚本来关闭或启动服务
	/etc/rc.d/rc.local->登录界面

	











		
		
		

		


end









